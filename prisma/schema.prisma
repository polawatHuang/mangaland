generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  password    String
  email       String   @unique
  role        Role
  latestLogin DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  projects    Project[]

  View View[]

  Favourite Favourite[]
}

model Project {
  id          Int      @id @default(autoincrement())
  userId      Int
  title       String
  description String?
  type        String
  status      Status
  coverImage  String?
  viewsCount  Int      @default(0)
  episodeTotal Int     @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  episodes    Episode[]
  projectTags ProjectTag[]
  views       View[]
  favourites  Favourite[]
}

model Episode {
  id          Int      @id @default(autoincrement())
  projectId   Int
  episodeNumber Int
  title       String
  description String?
  viewsCount  Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  project     Project  @relation(fields: [projectId], references: [id])
  images      EpisodeImage[]
  views       View[]
}

model EpisodeImage {
  id          Int      @id @default(autoincrement())
  episodeId   Int
  imageNumber Int
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  episode     Episode  @relation(fields: [episodeId], references: [id])
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projectTags ProjectTag[]
}

model ProjectTag {
  id        Int      @id @default(autoincrement())
  projectId Int
  tagId     Int
  createdAt DateTime @default(now())
  project   Project  @relation(fields: [projectId], references: [id])
  tag       Tag      @relation(fields: [tagId], references: [id])
}

model View {
  id        Int      @id @default(autoincrement())
  userId    Int?
  projectId Int
  episodeId Int?
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
  episode   Episode? @relation(fields: [episodeId], references: [id])
}

model Favourite {
  id        Int      @id @default(autoincrement())
  userId    Int
  projectId Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
}

model Menu {
  id        Int      @id @default(autoincrement())
  title     String
  link      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  SUPERADMIN
  ADMIN
  MEMBER
}

enum Status {
  ACTIVE
  INACTIVE
}